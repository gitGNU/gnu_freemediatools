#############################################################################
# Makefile for building: libglew.a
# Generated by qmake (1.07a) (Qt 3.3.7) on: Tue Jan 29 19:46:13 2008
# Project:  glew.pro
# Template: lib
# Command: $(QMAKE) -o Makefile glew.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DGLEW_STATIC -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DGLEW_STATIC -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I.. -I../../Core/Objects -I../../Core/Render -I../../Core/World -I../../desktop -I../../libraries -I../../libraries/assetobj -I../../libraries/GLCore -I../../libraries/glew -I../../libraries/imagelibs -I../../libraries/jahkeyframes -I../../libraries/jahpreferences -I../../libraries/jahtimer -I../../libraries/jahtracer -I../../libraries/mediaobject -I../../uiwidgets -I../../uiwidgets/interfaceobjs -I../../uiwidgets/jahcalc -I../../uiwidgets/jahfileloader -I../../uiwidgets/keyframes -I../../uiwidgets/nodes -I../../uiwidgets/timeline -I../../Modules/animate -I../../Modules/color -I../../Modules/edit -I../../Modules/effect -I../../Modules/painter -I../../Modules/text -I../../objectlibs/FTGL -I../../objectlibs/glmlib -I../../objectlibs/l3ds -I../../objectlibs/particle -I../../objectlibs/blur -I../../network -I../../player -I../../sqlite -I/usr/include/freetype2 -I/usr/local/include -I/usr/include -I/usr/include/qt3 -I/usr/X11R6/include -I/usr/X11R6/include
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = glew.h
SOURCES = glew.c
OBJECTS = glew.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../../../config.pro \
		../../../Settings.pro \
		glew.pro
QMAKE_TARGET = glew
DESTDIR  = 
TARGET   = libglew.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: glew.pro  /usr/share/qt3/mkspecs/default/qmake.conf ../../../config.pro \
		../../../Settings.pro \
		/usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile glew.pro
qmake: 
	@$(QMAKE) -o Makefile glew.pro

dist: 
	@mkdir -p .tmp/glew && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/glew/ && ( cd `dirname .tmp/glew` && $(TAR) glew.tar glew && $(GZIP) glew.tar ) && $(MOVE) `dirname .tmp/glew`/glew.tar.gz . && $(DEL_FILE) -r .tmp/glew

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

glew.o: glew.c glew.h \
		wglew.h \
		glxew.h

####### Install

install:  

uninstall:  

