#############################################################################
# Makefile for building: libjahworld.a
# Generated by qmake (1.07a) (Qt 3.3.7) on: Sat Jan 26 09:53:34 2008
# Project:  jahworld.pro
# Template: lib
# Command: $(QMAKE) -o Makefile jahworld.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe "-DQT_CLEAN_NAMESPACE" -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I../../../AuxiliaryLibraries/glew -I../../../AuxiliaryLibraries/FTGL -I../../../AuxiliaryLibraries/particle -I../../../AuxiliaryLibraries/blur -I../../../OpenLibraries/openobjectlib -I../../../OpenLibraries/openobjectlib/surface3d -I../../../OpenLibraries/openmedialib -I../../../OpenLibraries/opencore -I../../../OpenLibraries/openimagelib -I../../../OpenLibraries/openassetlib -I../../../OpenLibraries/opengpulib -I../../../OpenLibraries/openmedialib/mediaobject -I../../JahSource/jahmain -I../../JahDesktop/desktop -I../../JahModules/effect -I../../JahModules/animation -I../../JahCore/jahobjects -I../../JahCore/jahrender -I../../JahCore/jahworld -I../../JahWidgets/interfaceobjs -I../../JahWidgets/nodes -I../../JahWidgets/keyframes -I../../JahWidgets/wireup -I../../JahWidgets/mediatable -I../../JahLibraries -I../../JahLibraries/jahtracer -I../../JahLibraries/jahtimer -I../../JahLibraries/jahkeyframes -I../../JahLibraries/jahpreferences -I../../JahLibraries/jahformatter -I../../JahLibraries/jahtranslate -I../../JahLibraries/jahplugins -I../../JahLibraries/jahdataio -I../../JahLibraries/jahglcore -I../../JahLibraries/jahxml -I/usr/include/freetype2 -I/usr/local/include -I/usr/include -I../../../../../openlibraries/trunk/src -I/usr/include/qt3 -I/usr/X11R6/include -I/usr/X11R6/include
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = glworld.h \
		glworldgpueffects.h \
		glworldlists.h
SOURCES = glworld.cpp \
		glworldanimation.cpp \
		glworldcontrols.cpp \
		glworldcpueffects.cpp \
		glworlddataio.cpp \
		glworlddataload.cpp \
		glworlddatasave.cpp \
		glworldeffect.cpp \
		glworldfeedback.cpp \
		glworldflags.cpp \
		glworldglcore.cpp \
		glworldgpueffects.cpp \
		glworldgpucolorize.cpp \
		glworldinterface.cpp \
		glworldlayer.cpp \
		glworldlayerkeys.cpp \
		glworldlayerutils.cpp \
		glworldlists.cpp \
		glworldmesheffects.cpp \
		glworldplugineffects.cpp \
		glworldrender.cpp \
		glworldsliders.cpp
OBJECTS = glworld.o \
		glworldanimation.o \
		glworldcontrols.o \
		glworldcpueffects.o \
		glworlddataio.o \
		glworlddataload.o \
		glworlddatasave.o \
		glworldeffect.o \
		glworldfeedback.o \
		glworldflags.o \
		glworldglcore.o \
		glworldgpueffects.o \
		glworldgpucolorize.o \
		glworldinterface.o \
		glworldlayer.o \
		glworldlayerkeys.o \
		glworldlayerutils.o \
		glworldlists.o \
		glworldmesheffects.o \
		glworldplugineffects.o \
		glworldrender.o \
		glworldsliders.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_glworld.cpp
OBJMOC = moc_glworld.o
DIST	   = ../../../../config.pro \
		../../../../Settings.pro \
		jahworld.pro
QMAKE_TARGET = jahworld
DESTDIR  = 
TARGET   = libjahworld.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: jahworld.pro  /usr/share/qt3/mkspecs/default/qmake.conf ../../../../config.pro \
		../../../../Settings.pro \
		/usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile jahworld.pro
qmake: 
	@$(QMAKE) -o Makefile jahworld.pro

dist: 
	@mkdir -p .tmp/jahworld && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/jahworld/ && ( cd `dirname .tmp/jahworld` && $(TAR) jahworld.tar jahworld && $(GZIP) jahworld.tar ) && $(MOVE) `dirname .tmp/jahworld`/jahworld.tar.gz . && $(DEL_FILE) -r .tmp/jahworld

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

glworld.o: glworld.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldanimation.o: glworldanimation.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldcontrols.o: glworldcontrols.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldcpueffects.o: glworldcpueffects.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworlddataio.o: glworlddataio.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworlddataload.o: glworlddataload.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworlddatasave.o: glworlddatasave.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldeffect.o: glworldeffect.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldfeedback.o: glworldfeedback.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldflags.o: glworldflags.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldglcore.o: glworldglcore.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldgpueffects.o: glworldgpueffects.cpp glworld.h \
		glworldlists.h \
		glworldgpueffects.h \
		jahheadable.h

glworldgpucolorize.o: glworldgpucolorize.cpp glworld.h \
		jahheadable.h

glworldinterface.o: glworldinterface.cpp glworld.h \
		jahheadable.h

glworldlayer.o: glworldlayer.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldlayerkeys.o: glworldlayerkeys.cpp glworld.h \
		jahheadable.h

glworldlayerutils.o: glworldlayerutils.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldlists.o: glworldlists.cpp glworldlists.h

glworldmesheffects.o: glworldmesheffects.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldplugineffects.o: glworldplugineffects.cpp glworld.h \
		jahheadable.h

glworldrender.o: glworldrender.cpp glworld.h \
		glworldlists.h \
		jahheadable.h

glworldsliders.o: glworldsliders.cpp glworld.h \
		jahheadable.h

moc_glworld.o: moc_glworld.cpp  glworld.h jahheadable.h

moc_glworld.cpp: $(MOC) glworld.h
	$(MOC) glworld.h -o moc_glworld.cpp

####### Install

install:  

uninstall:  

