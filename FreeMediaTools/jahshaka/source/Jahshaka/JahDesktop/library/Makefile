#############################################################################
# Makefile for building: liblibrary.a
# Generated by qmake (1.07a) (Qt 3.3.7) on: Sat Jan 26 15:24:55 2008
# Project:  library.pro
# Template: lib
# Command: $(QMAKE) -o Makefile library.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe "-DQT_CLEAN_NAMESPACE" -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I../../../AuxiliaryLibraries/apollon -I../../../AuxiliaryLibraries/blur -I../../../AuxiliaryLibraries/FTGL -I../../../AuxiliaryLibraries/gift -I../../../AuxiliaryLibraries/glew -I../../../AuxiliaryLibraries/particle -I../../../AuxiliaryLibraries/spaceball -I../../../AuxiliaryLibraries/sqlite -I../../../OpenLibraries/opencore -I../../../OpenLibraries/openassetlib -I../../../OpenLibraries/openassetlib/v2_openassetlib/src -I../../../OpenLibraries/openobjectlib -I../../../OpenLibraries/openobjectlib/surface3d -I../../../OpenLibraries/openmedialib -I../../../OpenLibraries/openmedialib/codecs/mpegenc -I../../../OpenLibraries/openmedialib/mediaobject -I../../../OpenLibraries/opengpulib -I../../../OpenLibraries/openimagelib -I../../../OpenLibraries/opennetworklib -I../../JahCore/jahobjects -I../../JahCore/jahrender -I../../JahCore/jahworld -I../../JahModules/editing -I../../JahWidgets/colortri -I../../JahWidgets/interfaceobjs -I../../JahWidgets/calc -I../../JahWidgets/jahfileloader -I../../JahWidgets/keyframes -I../../JahWidgets/nodes -I../../JahWidgets/timeline -I../../JahLibraries -I../../JahLibraries/jahdatabase -I../../JahLibraries/jahdataio -I../../JahLibraries/jahformatter -I../../JahLibraries/jahglcore -I../../JahLibraries/jahkeyframes -I../../JahLibraries/jahplayer -I../../JahLibraries/jahplayer/audioplayer -I../../JahLibraries/jahplayer/diskplayer -I../../JahLibraries/jahplayer/ramplayer -I../../JahLibraries/jahplugins -I../../JahLibraries/jahpreferences -I../../JahLibraries/jahthemes -I../../JahLibraries/jahtimer -I../../JahLibraries/jahtracer -I../../JahLibraries/jahtranslate -I/usr/include/freetype2 -I/usr/local/include -I/usr/include -I/usr/include/qt3 -I/usr/X11R6/include -I/usr/X11R6/include
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = jahlibrary.h \
		jahlibrarywidgets.h \
		assetmanmainwidget.h \
		assetmanmainwidget.ui.h \
		assetmanitem.h \
		advancedsearchform.h \
		loginform1.h
SOURCES = jahlibrary.cpp \
		jahlibraryinterface.cpp \
		assetmanmainwidget.cpp \
		assetmanitem.cpp \
		advancedsearchform.cpp \
		loginform1.cpp
OBJECTS = jahlibrary.o \
		jahlibraryinterface.o \
		assetmanmainwidget.o \
		assetmanitem.o \
		advancedsearchform.o \
		loginform1.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_jahlibrary.cpp \
		moc_assetmanmainwidget.cpp \
		moc_assetmanitem.cpp \
		moc_advancedsearchform.cpp \
		moc_loginform1.cpp
OBJMOC = moc_jahlibrary.o \
		moc_assetmanmainwidget.o \
		moc_assetmanitem.o \
		moc_advancedsearchform.o \
		moc_loginform1.o
DIST	   = ../../../../config.pro \
		../../../../Settings.pro \
		library.pro
QMAKE_TARGET = library
DESTDIR  = 
TARGET   = liblibrary.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: library.pro  /usr/share/qt3/mkspecs/default/qmake.conf ../../../../config.pro \
		../../../../Settings.pro \
		/usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile library.pro
qmake: 
	@$(QMAKE) -o Makefile library.pro

dist: 
	@mkdir -p .tmp/library && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/library/ && ( cd `dirname .tmp/library` && $(TAR) library.tar library && $(GZIP) library.tar ) && $(MOVE) `dirname .tmp/library`/library.tar.gz . && $(DEL_FILE) -r .tmp/library

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

jahlibrary.o: jahlibrary.cpp jahlibrary.h \
		jahlibrarywidgets.h \
		assetmanmainwidget.h

jahlibraryinterface.o: jahlibraryinterface.cpp jahlibrary.h

assetmanmainwidget.o: assetmanmainwidget.cpp assetmanmainwidget.h \
		advancedsearchform.h \
		assetmanmainwidget.ui.h \
		assetmanmainwidget.images.h \
		assetmanitem.h \
		embedded-images.h \
		loginform1.h

assetmanitem.o: assetmanitem.cpp assetmanitem.h \
		assetmanitem.ui.h \
		assetstringfunctions.h

advancedsearchform.o: advancedsearchform.cpp advancedsearchform.h \
		advancedsearchform.ui.h \
		embedded-images.h

loginform1.o: loginform1.cpp loginform1.h \
		loginform1.ui.h

moc_jahlibrary.o: moc_jahlibrary.cpp  jahlibrary.h 

moc_assetmanmainwidget.o: moc_assetmanmainwidget.cpp  assetmanmainwidget.h 

moc_assetmanitem.o: moc_assetmanitem.cpp  assetmanitem.h 

moc_advancedsearchform.o: moc_advancedsearchform.cpp  advancedsearchform.h 

moc_loginform1.o: moc_loginform1.cpp  loginform1.h 

moc_jahlibrary.cpp: $(MOC) jahlibrary.h
	$(MOC) jahlibrary.h -o moc_jahlibrary.cpp

moc_assetmanmainwidget.cpp: $(MOC) assetmanmainwidget.h
	$(MOC) assetmanmainwidget.h -o moc_assetmanmainwidget.cpp

moc_assetmanitem.cpp: $(MOC) assetmanitem.h
	$(MOC) assetmanitem.h -o moc_assetmanitem.cpp

moc_advancedsearchform.cpp: $(MOC) advancedsearchform.h
	$(MOC) advancedsearchform.h -o moc_advancedsearchform.cpp

moc_loginform1.cpp: $(MOC) loginform1.h
	$(MOC) loginform1.h -o moc_loginform1.cpp

####### Install

install:  

uninstall:  

