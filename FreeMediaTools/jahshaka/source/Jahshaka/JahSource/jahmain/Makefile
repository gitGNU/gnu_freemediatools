#############################################################################
# Makefile for building: libjahmain.a
# Generated by qmake (1.07a) (Qt 3.3.7) on: Sat Jan 26 15:25:09 2008
# Project:  jahmain.pro
# Template: lib
# Command: $(QMAKE) -o Makefile jahmain.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe "-DQT_CLEAN_NAMESPACE" -Wall -W -g -D_REENTRANT  -DJAHPREFIX=\"/mnt/sda10/mdupont/experiments/video/js/experiments/video/js/openlibraries/install\" -D_THREAD_SAFE=true -DHAVE_GL_GLEW_H -DNEWOPENOBJECTLIB -DJAHTHEMES -DJAHGIFT -DNVIDIA_GPU -DNEWOPENOBJECTLIB -DOPENIMAGELIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openimagelib/\" -DOPENMEDIALIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openmedialib/\" -DOPENEFFECTSLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openeffectslib/\" -DOPENOBJECTLIB_PLUGINS=\"/home/mdupont/experiments/video/js/openlibraries/trunk/src/openobjectlib/\" -DJAHSCRIPT -DJAHLINUX -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I../../../AuxiliaryLibraries/apollon -I../../../AuxiliaryLibraries/blur -I../../../AuxiliaryLibraries/FTGL -I../../../AuxiliaryLibraries/gift -I../../../AuxiliaryLibraries/particle -I../../../AuxiliaryLibraries/spaceball -I../../../AuxiliaryLibraries/sqlite -I../../../OpenLibraries/opencore -I../../../OpenLibraries/openassetlib -I../../../OpenLibraries/openassetlib/v2_openassetlib/src -I../../../OpenLibraries/openobjectlib -I../../../OpenLibraries/openobjectlib/surface3d -I../../../OpenLibraries/openmedialib -I../../../OpenLibraries/openmedialib/mediaobject -I../../../OpenLibraries/opengpulib -I../../../OpenLibraries/openimagelib -I../../../OpenLibraries/opennetworklib -I../../JahCore/jahobjects -I../../JahCore/jahrender -I../../JahCore/jahworld -I../../JahSource/jahcreate -I../../JahSource/jahmain -I../../JahSource/jahsplash -I../../JahModules/animation -I../../JahModules/colorize -I../../JahModules/editing -I../../JahModules/effect -I../../JahModules/keyer -I../../JahModules/painter -I../../JahModules/text -I../../JahModules/tracker -I../../JahDesktop/desktop -I../../JahDesktop/encoder -I../../JahDesktop/library -I../../JahDesktop/network -I../../JahDesktop/player -I../../JahDesktop/videoio -I../../JahWidgets/colortri -I../../JahWidgets/interfaceobjs -I../../JahWidgets/calc -I../../JahWidgets/jahfileloader -I../../JahWidgets/keyframes -I../../JahWidgets/nodes -I../../JahWidgets/wireup -I../../JahWidgets/timeline -I../../JahWidgets/waveform -I../../JahWidgets/mediatable -I../../JahLibraries -I../../JahLibraries/jahdatabase -I../../JahLibraries/jahdataio -I../../JahLibraries/jahformatter -I../../JahLibraries/jahglcore -I../../JahLibraries/jahkeyframes -I../../JahLibraries/jahplayer -I../../JahLibraries/jahplayer/audioplayer -I../../JahLibraries/jahplayer/diskplayer -I../../JahLibraries/jahplayer/ramplayer -I../../JahLibraries/jahplugins -I../../JahLibraries/jahpreferences -I../../JahLibraries/jahthemes -I../../JahLibraries/jahtimer -I../../JahLibraries/jahtracer -I../../JahLibraries/jahtranslate -I/usr/include/freetype2 -I/usr/local/include -I/usr/include -I../../../../../openlibraries/trunk/src -I/usr/include/qt3 -I/usr/X11R6/include -I/usr/X11R6/include
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = jahshaka.h \
		jahlogo.h \
		jahheader.h \
		jahscript.h
SOURCES = main.cpp \
		jahshaka.cpp \
		jahinterface.cpp \
		jahinterfacedualhead.cpp \
		jahglsupport.cpp \
		jahheader.cpp \
		jahscript.cpp
OBJECTS = main.o \
		jahshaka.o \
		jahinterface.o \
		jahinterfacedualhead.o \
		jahglsupport.o \
		jahheader.o \
		jahscript.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_jahshaka.cpp \
		moc_jahheader.cpp \
		jahheader.moc
OBJMOC = moc_jahshaka.o \
		moc_jahheader.o
DIST	   = ../../../../config.pro \
		../../../../Settings.pro \
		jahmain.pro
QMAKE_TARGET = jahmain
DESTDIR  = 
TARGET   = libjahmain.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS) $(OBJMOC)


mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: jahmain.pro  /usr/share/qt3/mkspecs/default/qmake.conf ../../../../config.pro \
		../../../../Settings.pro \
		/usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile jahmain.pro
qmake: 
	@$(QMAKE) -o Makefile jahmain.pro

dist: 
	@mkdir -p .tmp/jahmain && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/jahmain/ && ( cd `dirname .tmp/jahmain` && $(TAR) jahmain.tar jahmain && $(GZIP) jahmain.tar ) && $(MOVE) `dirname .tmp/jahmain`/jahmain.tar.gz . && $(DEL_FILE) -r .tmp/jahmain

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp jahshaka.h \
		spaceball.h \
		jahscript.h

jahshaka.o: jahshaka.cpp jahshaka.h

jahinterface.o: jahinterface.cpp jahshaka.h \
		jahlogo.h \
		jahheader.h

jahinterfacedualhead.o: jahinterfacedualhead.cpp jahshaka.h

jahglsupport.o: jahglsupport.cpp jahshaka.h

jahheader.o: jahheader.cpp jahheader.h \
		jahheader.moc

jahscript.o: jahscript.cpp jahscript.h

moc_jahshaka.o: moc_jahshaka.cpp  jahshaka.h 

moc_jahheader.o: moc_jahheader.cpp  jahheader.h 

moc_jahshaka.cpp: $(MOC) jahshaka.h
	$(MOC) jahshaka.h -o moc_jahshaka.cpp

moc_jahheader.cpp: $(MOC) jahheader.h
	$(MOC) jahheader.h -o moc_jahheader.cpp

jahheader.moc: $(MOC) jahheader.cpp
	$(MOC) jahheader.cpp -o jahheader.moc

####### Install

install:  

uninstall:  

