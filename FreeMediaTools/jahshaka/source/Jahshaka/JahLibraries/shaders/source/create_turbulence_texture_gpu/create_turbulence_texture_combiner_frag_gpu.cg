
half4 main(
	float2 position           				: TEXCOORD0,
	float2 base_position           			: TEXCOORD1,
	uniform float2 scale_factor				: register (c0),
	uniform float transparency				: register (c1),
	uniform float intensity					: register (c2),
	uniform float number_of_layers			: register (c3),
    uniform sampler2D texture0				: register (s0),
    uniform sampler2D texture1				: register (s1),
    uniform sampler2D texture2				: register (s2),
    uniform sampler2D texture3				: register (s3),
    uniform sampler2D texture4				: register (s4)
	) : COLOR
{
	float4 					Shade;
	float4 					Color;
	float4					color_element[5];

	int						i;

	float2 position2 = position * scale_factor;

	if (number_of_layers > 4)
	{
		color_element[0] = (half4)tex2D(texture0, position2);
		color_element[1] = (half4)tex2D(texture1, position2);
		color_element[2] = (half4)tex2D(texture2, position2);
		color_element[3] = (half4)tex2D(texture3, position2);
		color_element[4] = (half4)tex2D(texture4, position2);

		Shade = color_element[0] +
			color_element[1] / 2.0 +
			color_element[2] / 4.0 +
			color_element[3] / 8.0 +
			color_element[4] / 16.0;
	}
	else if (number_of_layers > 3)
	{
		color_element[0] = (half4)tex2D(texture0, position2);
		color_element[1] = (half4)tex2D(texture1, position2);
		color_element[2] = (half4)tex2D(texture2, position2);
		color_element[3] = (half4)tex2D(texture3, position2);

		Shade = color_element[0] +
			color_element[1] / 2.0 +
			color_element[2] / 4.0 +
			color_element[3] / 8.0;
	}
	else if (number_of_layers > 2)
	{
		color_element[0] = (half4)tex2D(texture0, position2);
		color_element[1] = (half4)tex2D(texture1, position2);
		color_element[2] = (half4)tex2D(texture2, position2);

		Shade = color_element[0] +
			color_element[1] / 2.0 +
			color_element[2] / 4.0;
	}
	else if (number_of_layers > 1)
	{
		color_element[0] = (half4)tex2D(texture0, position2);
		color_element[1] = (half4)tex2D(texture1, position2);

		Shade = color_element[0] +
			color_element[1] / 2.0;
	}
	else
	{
		color_element[0] = (half4)tex2D(texture0, position2);

		Shade = color_element[0];

	}

	Shade *= intensity;

    return (half4)Shade;
}
