!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.0001, build date Feb 19 2004  12:16:25
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.scale_factor : C0
#semantic main.transparency : C1
#semantic main.intensity : C2
#semantic main.number_of_layers : C3
#semantic main.texture0 : TEXUNIT0
#semantic main.texture1 : TEXUNIT1
#semantic main.texture2 : TEXUNIT2
#semantic main.texture3 : TEXUNIT3
#semantic main.texture4 : TEXUNIT4
#var float2 scale_factor : C0 :  : 2 : 1
#var float transparency : C1 :  : 3 : 1
#var float intensity : C2 :  : 4 : 1
#var float number_of_layers : C3 :  : 5 : 1
#var sampler2D texture0 : TEXUNIT0 : texunit 0 : 6 : 1
#var sampler2D texture1 : TEXUNIT1 : texunit 1 : 7 : 1
#var sampler2D texture2 : TEXUNIT2 : texunit 2 : 8 : 1
#var sampler2D texture3 : TEXUNIT3 : texunit 3 : 9 : 1
#var sampler2D texture4 : TEXUNIT4 : texunit 4 : 10 : 1
#var float2 position : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var float2 base_position : $vin.TEXCOORD1 : TEX1 : 1 : 1
#var half4 main : $vout.COLOR : COL : -1 : 1
DECLARE scale_factor;
DECLARE transparency;
DECLARE intensity;
DECLARE number_of_layers;
MULR R0.xy, f[TEX0].xyxx, scale_factor.xyxx;
TEX R1, R0.xyxx, TEX0, 2D;
TEX R2, R0.xyxx, TEX1, 2D;
MADR R1, R2, {0.5}.x, R1;
TEX R2, R0.xyxx, TEX2, 2D;
TEX R3, R0.xyxx, TEX0, 2D;
MADR R1, R2, {0.25}.x, R1;
TEX R2, R0.xyxx, TEX1, 2D;
TEX R4, R0.xyxx, TEX3, 2D;
MADR R3, R2, {0.5}.x, R3;
MADR R1, R4, {0.125}.x, R1;
MOVR R0.w, {4}.x;
SGTR H0.x, number_of_layers.x, R0.w;
ADDX H0.y, -H0.x, {1}.x;
ADDX H0.x, -H0.x, {1}.x;
TEX R2, R0.xyxx, TEX2, 2D;
TEX R4, R0.xyxx, TEX4, 2D;
MADR R3, R2, {0.25}.x, R3;
MADR R1, R4, {0.0625}.x, R1;
MOVR R0.w, {3}.x;
SGTR H0.z, number_of_layers.x, R0.w;
MULX H0.y, H0.y, H0.z;
ADDX H0.z, -H0.z, {1}.x;
MULX H0.z, H0.x, H0.z;
TEX R2, R0.xyxx, TEX3, 2D;
TEX R4, R0.xyxx, TEX0, 2D;
MADR R3, R2, {0.125}.x, R3;
MOVXC HC.x, H0.y;
MOVR R1(GT.x), R3;
TEX R2, R0.xyxx, TEX1, 2D;
TEX R3, R0.xyxx, TEX2, 2D;
MADR R4, R2, {0.5}.x, R4;
MADR R4, R3, {0.25}.x, R4;
MOVR R0.w, {2}.x;
SGTR H0.x, number_of_layers.x, R0.w;
MULX H0.y, H0.z, H0.x;
MOVXC HC.x, H0.y;
MOVR R1(GT.x), R4;
ADDX H0.x, -H0.x, {1}.x;
MULX H0.x, H0.z, H0.x;
MOVR R0.w, {1}.x;
SGTR H0.y, number_of_layers.x, R0.w;
MULX H0.z, H0.x, H0.y;
ADDX H0.y, -H0.y, {1}.x;
MULX H0.y, H0.x, H0.y;
TEX R2, R0.xyxx, TEX0, 2D;
TEX R3, R0.xyxx, TEX1, 2D;
MADR R2, R3, {0.5}.x, R2;
MOVXC HC.x, H0.z;
MOVR R1(GT.x), R2;
TEX R0, R0.xyxx, TEX0, 2D;
MOVXC HC.x, H0.y;
MOVR R1(GT.x), R0;
MULR o[COLH], R1, intensity.x;
END
# 54 instructions, 5 R-regs, 1 H-regs.
# End of program
