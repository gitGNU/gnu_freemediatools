!!ARBfp1.0
# ARB_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:32:28
# command line args: -profile arbfp1
#vendor NVIDIA Corporation
#version 1.0.02
#profile arbfp1
#program main
#semantic main.xcenter : C0
#semantic main.ycenter : C1
#semantic main.xrotation : C2
#semantic main.yrotation : C3
#semantic main.sphere_radius : C4
#semantic main.texture
#var float xcenter : C0 : c[0] : 1 : 1
#var float ycenter : C1 : c[1] : 2 : 1
#var float xrotation : C2 : c[2] : 3 : 1
#var float yrotation : C3 : c[3] : 4 : 1
#var float sphere_radius : C4 : c[4] : 5 : 1
#var sampler2D texture :  : texunit 0 : 6 : 1
#var float2 pos : $vin.TEXCOORD0 : TEX0 : 0 : 1
#var half4 main : $vout.COLOR : COL : -1 : 1
PARAM u0 = program.local[0];
PARAM u1 = program.local[1];
PARAM u2 = program.local[2];
PARAM u3 = program.local[3];
PARAM u4 = program.local[4];
PARAM c0 = {0, 0, 0, 1};
PARAM c1 = {0, 0, 0, 0};
PARAM c2 = {1e-007, 2, 0.15915507, 0.5};
PARAM c3 = {3.1415927, 1.5707288, 0.21211439, -0.018729299};
PARAM c4 = {0.074261002, 1.5707964, 0.31831014, 0};
TEMP R0;
TEMP R1;
TEMP R2;
TEMP H0;
MOV R0.w, c0.w;
MAD R0.x, fragment.texcoord[0].x, c2.y, -R0.w;
MOV R1.w, c0.w;
MAD R0.w, fragment.texcoord[0].y, c2.y, -R1.w;
MOV R0.y, R0.w;
RCP R0.w, u4.x;
MUL R0.w, -R0.y, R0.w;
ABS R1.x, R0.w;
ADD R0.w, R0.w, -c0.x;
CMP H0.x, R0.w, c0.w, c0.x;
ADD R0.w, c0.w, -R1.x;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MUL R0.w, c0.w, R0.w;
MOV R1.y, c4.x;
MAD R1.y, c3.w, R1.x, R1.y;
MAD R1.y, R1.y, R1.x, -c3.z;
MAD R1.x, R1.y, R1.x, c3.y;
MUL R1.y, R1.x, R0.w;
MUL R1.z, c2.y, H0.x;
MUL R1.y, R1.z, R1.y;
MAD R1.y, R1.x, R0.w, -R1.y;
MAD R1.y, H0.x, c3.x, R1.y;
SIN R1.y, R1.y;
RCP R1.y, -R1.y;
RCP R0.w, u4.x;
MUL R0.w, -R0.y, R0.w;
RCP R1.x, u4.x;
MUL R1.x, R0.x, R1.x;
MUL R1.y, R1.x, R1.y;
ABS R1.x, R0.w;
ADD R0.w, R0.w, -c0.x;
CMP H0.x, R0.w, c0.w, c0.x;
ADD R0.w, c0.w, -R1.x;
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
MUL R0.w, c0.w, R0.w;
MOV R1.z, c4.x;
MAD R1.z, c3.w, R1.x, R1.z;
MAD R1.z, R1.z, R1.x, -c3.z;
MAD R1.x, R1.z, R1.x, c3.y;
ABS R1.z, R1.y;
ADD R1.y, R1.y, -c0.x;
CMP H0.y, R1.y, c0.w, c0.x;
MUL R1.y, c2.y, H0.y;
ADD R1.w, c0.w, -R1.z;
RSQ R1.w, R1.w;
RCP R1.w, R1.w;
MUL R1.w, c0.w, R1.w;
MOV R2.x, c4.x;
MAD R2.x, c3.w, R1.z, R2.x;
MAD R2.x, R2.x, R1.z, -c3.z;
MAD R1.z, R2.x, R1.z, c3.y;
MAD R1.z, -R1.w, R1.z, c4.y;
MAD R1.z, -R1.y, R1.z, R1.z;
MAD R1.z, -R1.z, c2.z, c2.w;
ADD R1.z, R1.z, -u2.x;
ADD R1.y, R0.y, c2.x;
ADD R0.x, R0.x, c2.x;
MUL R1.y, R1.y, R1.y;
MAD R1.y, R0.x, R0.x, R1.y;
RSQ R1.y, R1.y;
RCP R1.y, R1.y;
MUL R1.y, c0.w, R1.y;
ADD R1.y, u4.x, -R1.y;
CMP H0.y, R1.y, c0.x, c0.w;
ADD H0.y, -H0.y, c0.w;
MUL R0.x, R1.x, R0.w;
MUL R0.y, c2.y, H0.x;
MUL R0.x, R0.y, R0.x;
MAD R0.x, R1.x, R0.w, -R0.x;
MAD R0.x, H0.x, c3.x, R0.x;
MUL R0.x, R0.x, c4.z;
MOV R0.y, R0.x;
MOV R0.x, R1.z;
TEX R0, R0, texture[0], 2D;
CMP R0.xyz, -H0.y, c1, R0;
MOV result.color.xyz, R0;
MOV result.color.w, c0.w;
END
# 79 instructions, 3 R-regs, 1 H-regs.
# End of program
