
half4 main(
	float2 position           				: TEXCOORD0,
	uniform float horizontal 				: register (c0),
	uniform float vertical 					: register (c1),
	uniform float stretch 					: register (c2),
	uniform float weight 					: register (c3),
    uniform sampler2D texture				: register (s0)
		   ) : COLOR
{
	half4 					Color;
	float2					right_position;
	float2					left_position;
	float2					up_position;
	float2					down_position;
	float					counter;
	float					actual_counter = 0.0;

	// Horizontal first
	Color = (half4)tex2D(texture, position);

	right_position = position;
	left_position = position;
	up_position = position;
	down_position = position;

	for (counter = 0; counter < 7.0; counter += 1.0)
	{
		if ((counter < horizontal) || (counter < vertical))
		{
			if (counter < horizontal)
			{
				right_position.x = right_position.x + stretch;
				Color += (half4)tex2D(texture, right_position) * weight;
				left_position.x = left_position.x - stretch;
				Color += (half4)tex2D(texture, left_position) * weight;
				actual_counter += 1.0;
			}

			if (counter < vertical)
			{
				up_position.y = up_position.y + stretch;
				Color += (half4)tex2D(texture, up_position) * weight;
				down_position.y = down_position.y - stretch;
				Color += (half4)tex2D(texture, down_position) * weight;
				actual_counter += 1.0;
			}
		}
	}

	if (actual_counter > 0.0)
	{
		Color /= ((actual_counter * weight * 2.0) + 1.0);
	}

// 	new_position = position;
// 	actual_counter = 0.0;

// 	for (counter = 0; counter < 10.0; counter += 1.0)
// 	{
// 		if (counter < vertical)
// 		{
// 			new_position.y = new_position.y + stretch;
// 			Color += (half4)tex2D(texture, new_position);
// 			actual_counter += 1.0;
// 		}
// 	}

// 	Color /= actual_counter;

    return (half4)Color;
}
